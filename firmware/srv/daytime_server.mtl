/**
 * Event handler for a connection being used for Daytime service.
 * This function is registered as the callback for the TCP connection.
 * cnx: TCP connection
 * val: event type (e.g., TCPWRITE, TCPCLOSE)
 * msg: dataa associated with the event (e.g., incoming data)
 * sock: socket object for this connection
 */
fun daytime_sock_event cnx val msg sock=
    if val==TCPWRITE then sock_write sock
    else 0;;

/**
 * Callback function for the main Daytime listening socket.
 * This is called by the TCP stack whenever a new client connects.
 * cnx: TCP connection
 */
fun daytime_server_cb cnx code msg=
    Secholn "day time accept";
    let [sockCnx:cnx sockCallback:nil]-> sock in
    let strcatlist time_date_utc :: "\13\10" :: nil -> res in  // Generate the current time in a human-readable format
    (
        tcp_set_cb cnx fixarg4 #daytime_sock_event sock;
        sock_send sock res;
        sock_close_after sock;
        0
    );;

fun daytime_start_srv port =
    tcp_listen port #daytime_server_cb;
    0;;
