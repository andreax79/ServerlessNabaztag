/**
 * Forth interpreter
 * Copyright (c) 2025 Andrea Bonomi
 * This code is licensed under the MIT License
 */

#ifdef FORTH

type Forth=[
    stack               // data stack
    rstack              // return stack
    cstack              // control stack
    pc                  // program counter
    state               // normal (0) or compilation state (-1)
    output              // list of collected output strings
    new_word_name       // name of the word being defined if in compilation state
    new_word_definition // list of Words being defined if in compilation state
    inter               // interpreter state
];;

proto forth_execute_word_code 2;;
proto forth_get_word 1;;
proto forth_http_post 3;;
proto forth_interpreter 3;;
proto forth_stack_to_str 2;;
proto forth_word_list_to_array 1;;

const FORTH_TRUE = -1;;
const FORTH_FALSE = 0;;

const FORTH_STATE_NORMAL = 0;;
const FORTH_STATE_COMPILATION = -1;;
const FORTH_SPACE = 32;; // ASCII space
const FORTH_DOUBLE_QUOTE = 34;; // ASCII " (double quote)

#endif
