#include protos/interactive_protos.mtl

// **********************
// Record
// **********************

proto _record_interactive_send_upload 0;;

var _record_time_start;;
var _record_mode;;
var _record_retry;;
var _record_play_end;;
var recordreq;;
var recorddata;;
var record_last_wav_bytes = 0;;

fun record_uploading = recordreq!=nil;;

fun runrecordstart=
    // wait for the end of the starting sound
    if !wavrunning then
    (
    led LED_NOSE RGB_RED;//if time_ms&64 then RGB_RED else 0;
//      setleds RGB_BLACK;
        unforcevol;
        recstart;
        set _record_time_start=time_ms;
        set run=recordRun
    );;

fun record_control mode=
    setleds RGB_BLACK;
    wavstop;
    motorset 0 0;
    motorset 1 0;
    forcevol 64;
    audiolib_wav_start_local_ex mp3_startrecord::nil 100;
    set _record_mode=mode;
    set run=recordStartRun;
    0;;

fun _record_cb_http http res=
    // record upload done
    set recorddata=nil;
    set recordreq=nil;
    Secholn res;
    setleds RGB_BLACK;
    if _record_play_end!=nil then
    (
        set _record_play_end=nil;
        audiolib_wav_start_local midi_endrecord::nil
    );
    set run=idleRun;
    0;;

fun record_upload_timeout=
    if record_uploading then
    (
        if _record_play_end!=nil && ((_record_play_end-time_ms)<0) then
        (
            set _record_play_end=nil;
            audiolib_wav_start_local midi_endrecord::nil
        );
        if (httpinactive recordreq)>STD_NET_TIMEOUT then
        (
            Secholn "##timeout on upload";
            httpabort recordreq;
            set recordreq=nil;
            if _record_retry>0 then
            (
                // retry
                set _record_retry=_record_retry-1;
                if (!gItState) then (
                    set recordreq=httprequest "POST" Secholn recordurl _record_mode recorddata #_record_cb_http HTTP_NORMAL;0
                ) else (
                    _record_interactive_send_upload
                );
                nil
            )
            else
            (
                // abort
                set recorddata=nil;
                if (!gItState) then (
                    set run=idleRun;0
                ) else (
                    interactive_error
                )
            )
        )
    );
    nil;;

const AskR = 0;; // v18
const RecordingTime = 8000;; // v18

fun runrecord=
    if !button2 || ((time_ms-_record_time_start)>8000)then
    (
        recstop;
        setleds RGB_BLACK;
        let recriff -> wavfile in
        (
            set recorddata=strcatlist wavfile;
            set _record_retry=3;
            set _record_play_end=time_ms+400;
            if (!gItState) then (
                set recordreq=httprequest "POST" Secholn recordurl _record_mode recorddata #_record_cb_http HTTP_NORMAL;
                set run=idleRun;0
            ) else (
                _record_interactive_send_upload
            )
        )
    );;

fun _record_interactive_send_upload =
    set recordreq = httprequest "POST" (interactifurl_reco gItApp record_last_wav_bytes gCurAudioCmdIndex) recorddata #interactive_req_cb_http HTTP_NORMAL;
    set run=interactiveReqWaitRun recordreq;
    0;;

