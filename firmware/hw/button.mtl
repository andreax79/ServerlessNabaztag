#include protos/button_protos.mtl
#include protos/jobs_protos.mtl

var _button_last;;
var _button_time;;
var _button_event;;
var _button_clic;;

fun button_job=
    let button2 -> b in
    if b!=_button_last then
    (
        set _button_last=b;
        if b then
        (
            if _button_time==nil then
            (
                set _button_clic=1;
                set _button_time=time_ms
            )
            else
            (
                set _button_clic=_button_clic+1;
                set _button_time=time_ms
            )
        )
        else if _button_time!=nil then set _button_time=time_ms
    )
    else if (_button_time!=nil) then
    (
        if ((time_ms-_button_time)>=BUTTON_T_LCLIC) then
        (
            if _button_last then set _button_event=if _button_clic==1 then BUTTON_LCLIC else BUTTON_DLCLIC;
            set _button_time=nil
        )
        else if ((time_ms-_button_time)>=BUTTON_T_DCLIC)&&!_button_last then
        (
            set _button_event=if _button_clic==1 then BUTTON_CLIC else BUTTON_DCLIC;
            set _button_time=nil
        )
    );
    JobRun;;

fun button_get_event=
    let _button_event -> ev in
    (
        set _button_event=nil;
        ev
    );;

fun button_init=
    job_start "button" #button_job;;
